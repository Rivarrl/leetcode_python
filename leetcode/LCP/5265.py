# -*- coding: utf-8 -*-
# ======================================
# @File    : 5265.py
# @Time    : 2019/11/17 10:37
# @Author  : Rivarrl
# ======================================
from algorithm_utils import *
import sys
sys.setrecursionlimit(3000)

class Solution:
    """
    5265. 可被三整除的最大和
    给你一个整数数组 nums，请你找出并返回能被三整除的元素最大和。
    示例 1：
    输入：nums = [3,6,5,1,8]
    输出：18
    解释：选出数字 3, 6, 1 和 8，它们的和是 18（可被 3 整除的最大和）。
    示例 2：
    输入：nums = [4]
    输出：0
    解释：4 不能被 3 整除，所以无法选出数字，返回 0。
    示例 3：
    输入：nums = [1,2,3,4,4]
    输出：12
    解释：选出数字 1, 3, 4 以及 4，它们的和是 12（可被 3 整除的最大和）。
    提示：
    1 <= nums.length <= 4 * 10^4
    1 <= nums[i] <= 10^4
    """
    @timeit
    def maxSumDivThree(self, nums: List[int]) -> int:
        r = [0, 0, 0]
        tmp = [0, 0, 0]
        for x in nums:
            for i in range(3):
                j = (r[i] + x) % 3
                tmp[j] = max(tmp[j], r[i] + x)
            for i in range(3):
                r[i] = tmp[i]
        return r[0]


if __name__ == '__main__':
    a = Solution()
    a.maxSumDivThree([3,6,5,1,8])
    a.maxSumDivThree([4])
    a.maxSumDivThree([1,2,3,4,4])
    a.maxSumDivThree([2,6,2,2,7])
    a.maxSumDivThree([2,3,36,8,32,38,3,30,13,40])
    a.maxSumDivThree([8410,8561,6179,8749,9611,5741,3834,7325,2143,6030,6126,5854,6976,2635,2730,9110,585,6733,6999,9183,7188,9063,9156,2552,3102,3668,417,4547,546,7418,9944,4301,5433,711,3816,4951,1090,4562,7268,9254,1935,5652,5714,175,9377,6524,2728,8241,8154,1650,7833,7691,83,5288,8641,8912,6648,293,6740,7124,1230,5280,3125,5582,7772,2112,3791,5829,4054,2408,3271,9502,2802,2781,5089,9498,7169,9510,6716,2126,7791,8059,5643,2460,2195,6125,7571,8428,8885,7062,7588,2599,274,2909,9080,5589,6015,6716,1299,7626,8449,6657,5322,1131,4905,749,8319,7666,353,3939,199,3653,9136,3388,530,6870,879,8097,9119,3607,3896,1532,2025,6325,9420,5868,7596,119,8400,9477,249,6817,9333,865,1158,4101,8225,9315,2500,1854,3550,7342,6159,1532,9386,9301,2168,7883,5295,3261,5265,863,6760,5973,9730,8372,2389,7558,7465,7410,1924,3699,4196,5753,4383,1013,5377,1863,4548,5899,6887,2758,4758,4389,4768,6442,6750,8921,5217,165,5621,705,572,1160,7732,3360,8190,2985,7077,9313,1167,2066,5613,453,1542,7717,4388,5847,5993,8154,7268,4643,8960,9561,269,3418,2573,4158,7489,2326,7488,3196,7828,7525,366,5144,2321,6942,3654,1072,2734,6477,1031,5748,5464,9140,5070,1319,8624,5941,5752,2510,4966,7329,5699,1186,774,4531,4226,4625,6293,3124,7621,9119,6556,513,1933,1361,1848,3246,5619,5949,794,8632,4812,8731,8474,1843,7750,7144,8295,2594,6223,5524,3572,8105,7431,2843,844,2947,1317,5428,6704,6732,2426,5653,2080,1264,1478,1205,2088,3662,1955,4808,2118,112,6167,8800,3717,9062,3396,7675,9665,7494,2220,3829,2720,7371,1615,4270,9602,1941,6214,8349,8784,5727,8259,2372,3690,6740,8410,5822,2909,236,1094,3442,8321,5659,7750,7449,9758,4687,1694,3720,9814,9679,7932,7804,8828,2514,3109,7040,9535,1252,4643,389,3484,801,7418,7293,5418,8282,137,2056,3829,8577,2123,9623,5071,1174,4141,1416,2622,1629,3034,698,1720,1397,3483,9212,5559,2200,1936,242,708,8888,8374,8831,7116,6353,5335,5813,5028,4510,327,9491,9716,1147,2241,4756,721,8312,1703,3521,2405,5023,9565,8174,9015,9464,255,4605,8769,5457,8739,139,4202,9769,4611,3165,1633,817,4243,6115,4021,497,897,3783,8971,2778,7080,3329,2857,531,599,2869,6526,9829,3915,7733,193,230,9710,7995,3242,3397,7469,5118,5525,317,9570,7731,9818,9122,9342,7031,3176,1731,4825,4395,2376,7727,9138,328,9907,7562,6885,5448,3504,7339,9573,6049,9201,1684,6878,8398,1909,7063,3663,8782,4960,8809,5997,3458,482,3462,5738,158,5820,1597,77,3777,1870,6439,5197,807,5886,1432,2479,6442,6311,8002,5635,3373,7729,9283,6465,2515,2725,2699,9680,2778,1170,9184,2479,4633,8747,2262,1784,4740,5851,6691,9376,4695,6477,6655,3069,1677,9308,3216,3971,9467,8216,1516,2283,6095,9962,1119,6479,8188,4405,2356,1089,7313,9673,7863,240,3459,2069,454,7995,2019,4692,7181,1075,4034,7639,7376,2968,5021,5417,9849,901,2765,6957,3851,1448,4498,1067,6828,76,8518,689,7358,410,4678,7820,7172,1758,4216,3191,8886,8100,5424,7411,5240,1515,7416,1349,6842,8578,768,6680,1988,3521,9819,7465,6789,987,3232,2025,3818,807,3234,7639,5137,2500,3485,9003,2094,8436,1975,9949,3951,5682,8463,4690,956,2786,6241,8621,6899,9722,4895,5119,7191,2613,3114,9930,6794,9699,8804,7954,7138,6930,5957,8448,5491,9623,1257,9063,2999,8012,3088,4580,4435,2387,3735,9362,6305,9721,4525,9,3651,533,6875,6635,586,1978,4744,1880,9594,408,8258,5142,2800,3785,2067,5676,326,7181,4602,7339,456,6460,4702,2221,3887,3548,2391,4340,5224,5917,603,4512,7864,2970,5187,2631,520,3226,6732,3710,2397,5542,8267,7716,1183,412,3715,9172,9315,5346,3346,4321,6275,4816,5963,851,3089,7109,9095,4234,5245,4728,3579,888,261,1159,5285,5561,9730,3487,8703,5531,3504,408,4598,7521,4609,6677,34,9856,1522,6060,885,282,2365,6955,3112,171,4415,1081,4272,8709,2189,4201,4785,6409,5357,3658,3583,1832,5603,7442,5311,3826,6654,3579,3081,5325,4690,3476,3122,8778,6723,7820,7352,6677,7423,8958,7132,8802,9799,8219,3000,76,6212,8644,3614,7328,1010,2632,2012,6106,9102,130,5252,7525,6014,4213,2091,8670,8024,4592,6282,2325,7597,3814,92,3983,7411,3674,5609,9074,5033,6385,2590,7772,7586,8559,586,4554,6603,8629,8699,7469,1093,9139,3940,992,5453,2880,1127,4424,5837,9201,5123,9445,8824,5945,2416,5822,1011,6013,7358,3173,7268,1180,7465,4725,7680,5830,1226,1516,2882,2874,6729,2274,6799,8325,5948,6448,3680,2923,7754,1476,7725,3229,6262,6292,7802,2188,2809,8479,1970,3253,7466,3338,2955,5118,5579,6255,8062,148,3087,5603,2685,2595,4295,6911,998,937,5808,3348,407,9110,2344,2783,9987,8242,9022,8078,4850,1788,2229,18,5550,1028,6762,3823,7033,7556,8707,9871,2663,158,3773,5801,5126,8873,9055,8503,6737,277,5484,8467,8736,4898,422,1315,5936,4701,6157,7749,4316,4329,649,9845,7199,3562,6618,7061,6015,6169,5429,5139,4970,3777,8067,8191,8858,2756,5437,6103,1760,9563,4434,6568,3885,163,4824,6208,2728,5247,6144,8193,7714,6151,4130,5827,2914,2651,5757,6735,3510,2515,2336,2276,3063,9608,6108,432,392,6233,8007,2796,8402,5059,5083,8861,590,5327,8581,7723,667,7370,6983,3703,1696,636,4444,8670,148,9061,503,6421,8045,7308,6539,1014,8253,4829,4791,9630,729,8309,7256,1045,907,7632,8735,647,4983,5659,5857,8715,8544,5079,6597])

